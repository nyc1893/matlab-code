

N1 = 365*24*6

WS_MIN = 1e-3;
MET_2009='C:\Users\yunchuanl\Downloads\WinPython\notebooks\MET_2009.csv';
MET_2010='C:\Users\yunchuanl\Downloads\WinPython\notebooks\MET_2010.csv';

GE_2009='C:\Users\yunchuanl\Downloads\WinPython\notebooks\GE_kW_2009.csv';
GE_2010='C:\Users\yunchuanl\Downloads\WinPython\notebooks\GE_kW_2010.csv';

WS1_2010 = csvread(MET_2010, 1,5, [1,5,N1,5]);
ind = find(~isnan(WS1_2010));
WS1_2010_preprocessed = interp1(ind, WS1_2010(ind), (1:N1)', 'linear', 'extrap');
for i=1:N1
    WS1_2010_preprocessed(i) = max(WS1_2010_preprocessed(i), WS_MIN);
end
clear WS1_2010;


WS2_2010 = csvread(MET_2010, 1,7, [1,7,N1,7]);
ind = find(~isnan(WS2_2010));
WS2_2010_preprocessed = interp1(ind, WS2_2010(ind), (1:N1)', 'linear', 'extrap');
for i=1:N1
    WS2_2010_preprocessed(i) = max(WS2_2010_preprocessed(i), WS_MIN);
end
clear WS2_2010;

for i=1:N1
	WS_2010(i)=(WS1_2010_preprocessed(i)+WS2_2010_preprocessed(i))/2;
end
clear WS1_2010_preprocessed;
clear WS2_2010_preprocessed;


NN=13;
A9_power_2010=csvread(GE_2010, 1,NN, [1,NN,N1,NN]);
ind = find(~isnan(A9_power_2010));
A9_power_2010_preprocessed = interp1(ind, A9_power_2010(ind), (1:N1)', 'linear', 'extrap');
for i=1:N1
    A9_power_2010_preprocessed(i) = max(A9_power_2010_preprocessed(i), WS_MIN);
end
A9_power_2010=A9_power_2010_preprocessed;
clear A9_power_2010_preprocessed;


x=WS_2010';
y=A9_power_2010;


%look_up table for power
%{
x = 0:0.5:25; 

y = [0,0,0,0,0,0,0,...
	0, 50,100,150,200, 250,350,400,530,650,...
	 800,930, 1080,1180,1300, 1360,1410,1430,1470,1500,...
	 1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,...
	 1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,...
	 1500,1500,1500,1500
]; 

Xq = 0:.1:25;
        Vq = interp1(x,y,Xq); plot(x,y,'o',Xq,Vq,':.')
	
interp1(y,x,100)
%}


 %Vq = interp1(y,x,Xq); plot(x,y,'o',Xq,Vq,':.')

 
 

METDIR_A_2010 = csvread(MET_2010, 1,6, [1,6,N1,6]);
ind = find(~isnan(METDIR_A_2010));
METDIR_A_2010_preprocessed = interp1(ind, METDIR_A_2010(ind), (1:N1)', 'linear', 'extrap');
for i=1:N1
    METDIR_A_2010_preprocessed(i) = max(METDIR_A_2010_preprocessed(i), WS_MIN);
end

clear ind METDIR_A_2010;

METDIR_H_2010 = csvread(MET_2010, 1,12, [1,12,N1,12]);
ind = find(~isnan(METDIR_H_2010));
METDIR_H_2010_preprocessed = interp1(ind, METDIR_H_2010(ind), (1:N1)', 'linear', 'extrap');
for i=1:N1
    METDIR_H_2010_preprocessed(i) = max(METDIR_H_2010_preprocessed(i), WS_MIN);
end
clear ind METDIR_H_2010 ;

for i=1:N1
	METDIR_2010(i)=(METDIR_A_2010_preprocessed(i)+METDIR_H_2010_preprocessed(i))/2;
end
clear ind METDIR_A_2010_preprocessed
clear ind METDIR_H_2010_preprocessed

%back look_up table for power
y = [
	0, 50,100,150,200, 250,350,400,530,650,...
	 800,930, 1080,1180,1300, 1360,1410,1430,1470,1500
]; 

x=3.5:0.5:13;
Xq = 0:1:1500;


win_size=200;
N2=3167;	%  train_end
N3= N2-win_size;		% train_start

for i=(N3+1):N2
GE_PW=csvread(GE_2010, i,5, [i,5,i,57]);   %get ith line 
A=max(GE_PW, WS_MIN);
B=METDIR_2010(i)*ones(1,length(A));
	for j=1: size(A,2)
		D(j)=max(interp1(y,x,A(j)),3.5);
	end
C(:,:,i-N3)=[A;B;D];
end






N3= N2-win_size;		% train_start

for i=(N3+1):N2+24
GE_PW=csvread(GE_2010, i,5, [i,5,i,57]);   %get ith line 
A=GE_PW;
A(A<0)=WS_MIN;
B=METDIR_2010(i)*ones(1,length(A));
	for j=1: size(A,2)
		D(j)=interp1(y,x,A(j));
	end
Ground(:,:,i-N3)=[A;B;D];
end


%{

C2=zeros(1,max(size(A)));
for i=N2+1:N2+100
B=METDIR_2010(i)*ones(1,length(A));
C(:,:,i)=[C2;B;D];
end

%}


r=50;
%N2=3167;
[W,H,Q, Vhat] =betaNTF(C(:,:,1:win_size),r);

S = C(:,:,(1:win_size))-Vhat;
S=tensor(S);
m(r)=norm(S);

wff=W;
hff=H;

q=Q;%all the value of q

E=C;


%{

for i=1:r
V(i,:)=kron(wff(:,i),hff(:,i));
end
V=V';
%}


%back look_up table for power
y = [
	0, 50,100,150,200, 250,350,400,530,650,...
	 800,930, 1080,1180,1300, 1360,1410,1430,1470,1500
]; 

x=3.5:0.5:13;
Xq = 0:1:1500;


for i=N2+1:N2+24
GE_PW=csvread(GE_2010, i,5, [i,5,i,57]);   %get ith line 
A=GE_PW;
A(A<0)=WS_MIN;
j=i-1;
B=METDIR_2010(i)*ones(1,length(A));
	for j=1: size(A,2)
		D(j)=max(interp1(y,x,A(j)),3.5);
	end
F= csvread('csvlist.csv', i,0, [i,0,i,52]);
%F=zeros(1,length(A));
C(:,:,i+win_size-N2)=[F;B;D];
end



q=Q;

start=200;
J=0;
%q(401,:)=q(400,:);


%for lada=9620:1:9630
	lada=2000;
	%start=win_size;
	span=24;
	for j=(start+1):(start+span)
		%q(j,:)=(q(j-1,:)+q(j-2,:)+q(j-3,:)+q(j-4,:)+q(j-5,:)+q(j-6,:)+q(j-7,:)+q(j-8,:)+q(j-9,:)+q(j-10,:))/10;
		%q(j,:)=(q(j-1,:)+q(j-2,:)+q(j-3,:))/3;
		q(j,:)=q(j-1,:);
		order=2;

		j
		
		cnt=0;
		test=zeros(1,410);

	%figure(j)
		while 1
		

		%cost function
			M=C(:,:,j);
			sim3=0;   
			for ii=1:order
	%		sim3=((norm(q(j-ii,:)- q(j,:))))^2+sim3;
			sim3=(dot(q(j-ii,:),q(j,:)) / (sqrt( sum( q(j-ii,:).*q(j-ii,:) )) * sqrt( sum( q(j,:).*q(j,:) ))))*(norm(q(j-ii,:)- q(j,:)))+sim3;
			end
			reM=0;
			for i=1:r
				test={wff(:,i) hff(:,i)};
				T= outer_product(test);
				reM=q(j,i)*T+reM;
			end
			
			J2=J;
			cnt;
			J=norm((M-reM),'fro')+lada*sim3;
			%test(cnt)=J;
			if cnt>400    | (cnt>5 & J>J2)
				break
			end
%	plot(cnt,J,'-*');
	%hold on
			%%%%%%%%%%%%      ???? W      %%%%%%%%%%%%%%%%%%%%%%%%
			[m1,m2]=size(M);
			W= zeros(m1*m2,m1*m2);% by missing data to 0
			for i=1:(m1*m2)
				W(i,i)=1;
			end

			b=find(M==0);
			[m3,m4]=size(b);
			for i=1:m3
			W(b(i),b(i))=0;% find the missing data
			end

			

			M=C(:,:,j);
			[m1,m2]=size(M);
			M2 = reshape(M,[1,m1*m2]);%vectorizes of M
			X=ones(r,m1*m2);
			%M2*W*X'
			%q(401,i)*X*W*X';

			simi=0;
			for ii=1:order
			simi=dot(q(j-ii,:),q(j,:)) / (sqrt( sum( q(j-ii,:).*q(j-ii,:) )) * sqrt( sum( q(j,:).*q(j,:) )))+simi;
			
			%simi=norm(q(j-ii,:)- q(j,:))+simi;
			end
			
			
			term2=0;  
		%	term2=ones(1,r);
		%update function

			for i=1:r
			test={wff(:,i) hff(:,i)};
			T= outer_product(test);
			[m1,m2]=size(T);
			T2= reshape(T,[1,m1*m2]);
			T2=T2';
			V(:,i)=T2;
			end

			fenzi= M2*V;
			fenmu= q(j,:)*V'*V;
			for i=1:r
			q(j,i)=q(j,i)*(fenzi(i)/fenmu(i));
			end
		
		
		%{
			for i=1:r
			test={wff(:,i) hff(:,i)};
			T= outer_product(test);
			[m1,m2]=size(T);
			T2= reshape(T,[1,m1*m2]);
			T2=T2';
			V(:,i)=T2;
			end
			

			
			for ii=1:order
				term2=(term2+(dot(q(j-ii,:),q(j,:)))*q(j,:))/(sqrt( sum( q(j-ii,:).*q(j-ii,:) )) * sqrt( sum( q(j,:).*q(j,:))));
			end
				

			fenzi= M2*W*V+ lada*term2;
			fenmu= q(j,:)*V'*W*V+lada*q(j,:).*simi;
			for i=1:r
			q(j,i)=q(j,i)*(fenzi(i)/fenmu(i));
			end
			
			
			%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
			for i=1:r
			X=V(i,:)';
				for ii=1:order
			%term2=(norm(q(j-ii,:)- q(j,:))).*q(j,:)+term2;
					term2=term2+q(j,i)*(dot(q(j-ii,:),q(j,:)) / (sqrt( sum( q(j-ii,:).*q(j-ii,:) )) * sqrt( sum( q(j,:).*q(j,:) ))));
				end
				test={wff(:,i) hff(:,i)};
				T= outer_product(test);
				[m1,m2]=size(T);
			    T2 = reshape(T,[1,m1*m2]);%vectorizes of M			
				
			q(j,i)=q(j,i)*((M2*W*X+lada*term2)./(q(j,i)*T2*W*X+lada*q(j,i).*simi));
			end
			%}
			
			
			cnt=cnt+1;
		end

	%hold off
	end




	start=200;
	span=24;
	sum_Mar=zeros(1,span);
	sum_truth=zeros(1,span);
%start=400;
	for j=(start+1):(start+span)
		% This is the prediction precess   last process
		Mbar= 0;
		for i=1:r
		test={wff(:,i) hff(:,i)};
		T= outer_product(test);
		Mbar= q(j,i)*T+Mbar;
		end

		for i=1:size(Mbar,2)
			sum_Mar(j-start)=sum_Mar(j-start)+Mbar(1,i,1);
		end
		% ground truth
		M=Ground(:,:,j);

		for i=1:size(Mbar,2)
			sum_truth(j-start)=sum_truth(j-start)+M(1,i,1);
		end
		
		x=1:size(Mbar(1,:),2);
		y1=Mbar(1,:);
		y2=M(1,:);

	end

b= max(size(sum_truth,1),size(sum_truth,2));
bb=1:1:b;
figure
plot(bb,sum_Mar,'-*')
hold on
plot(bb,sum_truth,'--')
hold off

